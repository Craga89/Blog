{"meta":{"exported_on":1385742693780,"version":"000"},"data":{"permissions":[{"id":1,"uuid":"4a05130e-4566-4ced-97c8-0ea62f6187c2","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-20T23:42:23.000Z","updated_by":1},{"id":2,"uuid":"c1d68407-e604-4408-bdb8-39df7ff469b7","name":"Remove posts","object_type":"post","action_type":"remove","object_id":null,"created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-20T23:42:23.000Z","updated_by":1},{"id":3,"uuid":"04a36708-0d28-45e5-8311-521afa4ef3d1","name":"Create posts","object_type":"post","action_type":"create","object_id":null,"created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-20T23:42:23.000Z","updated_by":1}],"permissions_roles":[{"id":1,"role_id":1,"permission_id":1},{"id":2,"role_id":1,"permission_id":2},{"id":3,"role_id":1,"permission_id":3}],"permissions_users":[],"posts":[{"id":2,"uuid":"e523eeed-4c71-4b7f-ac72-4fe398e5fa46","title":"qTip<sup>2</sup> - Pre-release changes (AKA What happened to my qTip styles!?)","slug":"qtip2-pre-release-changes","markdown":"qTip2 is under-going to considerable changes over the next few weeks, with a new website on it’s way, a brand new build system to go along with it, and several new features and documentation updates. However, there are some breaking changes as qTip2 marches on to it’s final `2.0` release, and firmly out of nightly status!\n\nAs many of you watching GitHub repository will know, the class_rename branch, which removes dependency upon the `ui-tooltip\\*` classes used by jQuery UI, has been merged back in the master branch. This means of course, that any of you relying on the old class structure in your code, need to update to the new classes names. \n\nA list of old and new class names is listed below to ease this!\n\n* \\#ui-tooltip-&lt;id&gt; &rarr; #qtip-&lt;id&gt;\n* **.**ui-tooltip  &rarr; **.**qtip\n* **.**ui-tooltip-content  &rarr; **.**qtip-content\n* **.**ui-tooltip-titlebar  &rarr; **.**qtip-titlebar\n* **.**ui-tooltip-title  &rarr; **.**qtip-title\n* **.**ui-tooltip-button  &rarr; **.**qtip-close\n* **.**ui-tooltip-icon  &rarr; **.**qtip-icon\n* **.**ui-tooltip-focus  &rarr; **.**qtip-focus\n* **.**ui-tooltip-hover  &rarr; **.**qtip-hover\n* **.**ui-tooltip-default  &rarr; **.**qtip-default\n\nAs you can see, the `ui-tooltip-` prefix has simply been replace with the `qtip-` prefix. This applies to every in-built and CSS3 style too (in `basic.css` and `css3.css` respectively).\n\nA full list of changes is forth-coming, but for now this is the only breaking change you’re likely to encounter. Let me know via the issue tracker if you notice any more!","html":"<p>qTip2 is under-going to considerable changes over the next few weeks, with a new website on it’s way, a brand new build system to go along with it, and several new features and documentation updates. However, there are some breaking changes as qTip2 marches on to it’s final <code>2.0</code> release, and firmly out of nightly status!</p>\n\n<p>As many of you watching GitHub repository will know, the class_rename branch, which removes dependency upon the <code>ui-tooltip\\*</code> classes used by jQuery UI, has been merged back in the master branch. This means of course, that any of you relying on the old class structure in your code, need to update to the new classes names. </p>\n\n<p>A list of old and new class names is listed below to ease this!</p>\n\n<ul>\n<li>#ui-tooltip-&lt;id&gt; &rarr; #qtip-&lt;id&gt;</li>\n<li><strong>.</strong>ui-tooltip  &rarr; <strong>.</strong>qtip</li>\n<li><strong>.</strong>ui-tooltip-content  &rarr; <strong>.</strong>qtip-content</li>\n<li><strong>.</strong>ui-tooltip-titlebar  &rarr; <strong>.</strong>qtip-titlebar</li>\n<li><strong>.</strong>ui-tooltip-title  &rarr; <strong>.</strong>qtip-title</li>\n<li><strong>.</strong>ui-tooltip-button  &rarr; <strong>.</strong>qtip-close</li>\n<li><strong>.</strong>ui-tooltip-icon  &rarr; <strong>.</strong>qtip-icon</li>\n<li><strong>.</strong>ui-tooltip-focus  &rarr; <strong>.</strong>qtip-focus</li>\n<li><strong>.</strong>ui-tooltip-hover  &rarr; <strong>.</strong>qtip-hover</li>\n<li><strong>.</strong>ui-tooltip-default  &rarr; <strong>.</strong>qtip-default</li>\n</ul>\n\n<p>As you can see, the <code>ui-tooltip-</code> prefix has simply been replace with the <code>qtip-</code> prefix. This applies to every in-built and CSS3 style too (in <code>basic.css</code> and <code>css3.css</code> respectively).</p>\n\n<p>A full list of changes is forth-coming, but for now this is the only breaking change you’re likely to encounter. Let me know via the issue tracker if you notice any more!</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-11-20T23:54:13.000Z","created_by":1,"updated_at":"2013-11-21T21:45:55.000Z","updated_by":1,"published_at":"2012-11-20T12:00:00.000Z","published_by":1},{"id":3,"uuid":"bb892c2f-fc85-4254-99c1-05851491091e","title":"Efficient JavaScript Delta-encoding – Merging JSON objects","slug":"efficient-javascript-delta-encoding","markdown":"### NOTE\n\n **This is a very old blog post and I would not recommend using it in production. Utilising the Function consutrctor in this way, whilst useful, opens up issues of security and XSS issues. Also, there are much better ways of doing this, especially relating to the re-usage of objects (object pooling), [discussed here](http://buildnewgames.com/garbage-collector-friendly-code/).**\n \n<br />\n\n#### Preface\nAs I’m now in my 3rd year at Newcastle University, I was expected to produce a 40-page thesis over the last few months on a subject of my choice: *2D Multiplayer game using browser-native HTML5 standards and the Node.js run-time.*\n\nI decided early on to use the Client-Server architecture after reading up on several articles, particularly Glenn Fiedler’s “What every programmer needs to know about game networking” and Valve’s awesome multiplayer networking overview. However this meant a lot of extra work would be needed to make it playable, including the topic of this post: Delta-encoding.\n\n\n#### Delta Encoding?\nDelta encoding is a way of storing or transmitting data in the form of differences between sequential data rather than complete files.\n\nThat is, instead of sending a full game state to every client, we send only the differences between the new and last state, which gives us considerable bandwidth savings.\n\nHow do you implement something like this efficiently in JavaScript? It has no native method for merging objects, and using loops just doesn’t cut it performance-wise, at least cross-browser. Thankfully though, since the objects we’ll be merging have a pre-determined number of properties, we can avoid looping on each merge and take a shortcut.\n\n\n#### Implementation\nHere’s the full code listing for you to digest before I go into the details of how it works:\n\n<script src=\"https://gist.github.com/Craga89/2466525.js\"></script>\n\n##### Important notes:\n\n1. This will only merge properties defined in the Entity.defaults object.\n2. Variables passed by reference i.e. Objects and Arrays, are not copied but simply set by reference.\n - ergo... any Arrays or Objects which are merged into the first object are references to those in the second, so any changes will appear in both as it is the same object.\n3. *This method should only be used when you intend to discard the object that is to be merged i.e. the second object, which is the case in merging delta state objects.*\n\nThe general idea behind the code is simple: Rather than using a loop to iterate over the second objects properties and merge them in upon each call to the merge function, we take advantage of the [Function constructor](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function), which allows us to compile functions dynamically. This dynamically created function does the following when executed:\n\n1. For every property in the obj1‘s constructor property (Entity.defaults):\n2. Check if the property within the defaults object is also defined in the second object.\n3. If it is, set the first objects property value to that of the second object.\n\n[Check out the jsPerf results](http://jsperf.com/json-object-merge/11) that compare the usual iterative loop method with the above cached merge method.  We can see a pretty tremendous increase in cross-browser ops/second using this approach, staggeringly so in Chrome and it’s open-source counterpart, making handling multiple merges between several objects a breeze.\n\nSo there you have it, an efficient way to merge objects with pre-determined properties for use in Delta-encoding. ","html":"<h3 id=\"note\">NOTE</h3>\n\n<p><strong>This is a very old blog post and I would not recommend using it in production. Utilising the Function consutrctor in this way, whilst useful, opens up issues of security and XSS issues. Also, there are much better ways of doing this, especially relating to the re-usage of objects (object pooling), <a href=\"http://buildnewgames.com/garbage-collector-friendly-code/\">discussed here</a>.</strong></p>\n\n<p><br /></p>\n\n<h4 id=\"preface\">Preface</h4>\n\n<p>As I’m now in my 3rd year at Newcastle University, I was expected to produce a 40-page thesis over the last few months on a subject of my choice: <em>2D Multiplayer game using browser-native HTML5 standards and the Node.js run-time.</em></p>\n\n<p>I decided early on to use the Client-Server architecture after reading up on several articles, particularly Glenn Fiedler’s “What every programmer needs to know about game networking” and Valve’s awesome multiplayer networking overview. However this meant a lot of extra work would be needed to make it playable, including the topic of this post: Delta-encoding.</p>\n\n<h4 id=\"deltaencoding\">Delta Encoding?</h4>\n\n<p>Delta encoding is a way of storing or transmitting data in the form of differences between sequential data rather than complete files.</p>\n\n<p>That is, instead of sending a full game state to every client, we send only the differences between the new and last state, which gives us considerable bandwidth savings.</p>\n\n<p>How do you implement something like this efficiently in JavaScript? It has no native method for merging objects, and using loops just doesn’t cut it performance-wise, at least cross-browser. Thankfully though, since the objects we’ll be merging have a pre-determined number of properties, we can avoid looping on each merge and take a shortcut.</p>\n\n<h4 id=\"implementation\">Implementation</h4>\n\n<p>Here’s the full code listing for you to digest before I go into the details of how it works:</p>\n\n<script src=\"https://gist.github.com/Craga89/2466525.js\"></script>\n\n<h5 id=\"importantnotes\">Important notes:</h5>\n\n<ol>\n<li>This will only merge properties defined in the Entity.defaults object.  </li>\n<li>Variables passed by reference i.e. Objects and Arrays, are not copied but simply set by reference. <br />\n<ul><li>ergo... any Arrays or Objects which are merged into the first object are references to those in the second, so any changes will appear in both as it is the same object.</li></ul></li>\n<li><em>This method should only be used when you intend to discard the object that is to be merged i.e. the second object, which is the case in merging delta state objects.</em></li>\n</ol>\n\n<p>The general idea behind the code is simple: Rather than using a loop to iterate over the second objects properties and merge them in upon each call to the merge function, we take advantage of the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function\">Function constructor</a>, which allows us to compile functions dynamically. This dynamically created function does the following when executed:</p>\n\n<ol>\n<li>For every property in the obj1‘s constructor property (Entity.defaults):  </li>\n<li>Check if the property within the defaults object is also defined in the second object.  </li>\n<li>If it is, set the first objects property value to that of the second object.</li>\n</ol>\n\n<p><a href=\"http://jsperf.com/json-object-merge/11\">Check out the jsPerf results</a> that compare the usual iterative loop method with the above cached merge method.  We can see a pretty tremendous increase in cross-browser ops/second using this approach, staggeringly so in Chrome and it’s open-source counterpart, making handling multiple merges between several objects a breeze.</p>\n\n<p>So there you have it, an efficient way to merge objects with pre-determined properties for use in Delta-encoding. </p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-11-20T23:54:35.000Z","created_by":1,"updated_at":"2013-11-21T21:47:12.000Z","updated_by":1,"published_at":"2012-04-24T11:00:00.000Z","published_by":1},{"id":4,"uuid":"82f7e15b-fc39-4946-ab39-eba922323422","title":"qTip<sup>2</sup> – Tip plugin’s dimension options updated","slug":"qtip2–tip-plugin-dimensions","markdown":"For those of you using the qTip<sup>2</sup> [nightly builds](http://qtip2.com/nightly), as of commit [970cfabacd](https://github.com/Craga89/qTip2/commit/970cfabacd0511feb516eb3b632f6cc2bfa337e2) the tip plugin’s `width` and `height` options have changed slightly to become relative to the tips position on the tooltip.\n\n\n#### \"relative to the tips position\"?!\nWhen the position of the tip is on the horizontal sides of the tooltip i.e. the left or right, the width and height are switched. This is done to ensure the tip dimensions stay as you’d expect no matter what position the actual tooltip is in. \n\nTo demonstrate this, see the jsFiddle example below of the past and current implementations.\n\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/HEVa5/embedded/result\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>","html":"<p>For those of you using the qTip<sup>2</sup> <a href=\"http://qtip2.com/nightly\">nightly builds</a>, as of commit <a href=\"https://github.com/Craga89/qTip2/commit/970cfabacd0511feb516eb3b632f6cc2bfa337e2\">970cfabacd</a> the tip plugin’s <code>width</code> and <code>height</code> options have changed slightly to become relative to the tips position on the tooltip.</p>\n\n<h4 id=\"relativetothetipsposition\">\"relative to the tips position\"?!</h4>\n\n<p>When the position of the tip is on the horizontal sides of the tooltip i.e. the left or right, the width and height are switched. This is done to ensure the tip dimensions stay as you’d expect no matter what position the actual tooltip is in. </p>\n\n<p>To demonstrate this, see the jsFiddle example below of the past and current implementations.</p>\n\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/HEVa5/embedded/result\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-11-20T23:55:03.000Z","created_by":1,"updated_at":"2013-11-21T21:47:44.000Z","updated_by":1,"published_at":"2012-08-26T11:00:00.000Z","published_by":1},{"id":5,"uuid":"f628a365-3609-4ada-a87b-b3f0e0be31c2","title":"qTip<sup>2</sup> - Styles update","slug":"qtip2-styles-update","markdown":"In the [recent commit today](https://github.com/Craga89/qTip2/commit/563329f7198708c7c4d4ab28b41d4c6642275796) a re-factoring of the CSS stylesheets took place in order to simply the styles qTip<sup>2</sup> uses, as well as changes  to the underlying tips code to cope with these changes. \n\n1. The biggest change is the movement of the `border` and `border-radius` declarations from the *titlebar and content elements* to the main `ui-tooltip` element. Thanks to this, many duplicate styles could be  **removed from the stylesheet for a *10% size saving!***\n\n - This will likely effect the styling of your tooltips upon updating, and you may see black borders on your tooltip “tips” until you move the border colour declarations to the top ui-tooltip element.\n\n2. The `ui-tooltip-shadow` class now *only works in IE9+ now* because of this modification and removal of the IE9> `filter` declarations. This was done because applying a filter to any element renders the overflow property useless, as reference from this [blog post comment](http://labs.thesedays.com/blog/2011/06/02/ie-alpha-overflow-hidden-bug/#comment-291):\n\n > What I think happens in IE<9 is it “designates” a square where DirectX can render on top of a hasLayout box based on `width`+`height` properties, and if content tries to expand outside that box then it’ll be cut off. I think that in block elements which have filters in them that everything in them is also rendered by DirectX. (As a side effect which you may already be aware of, text rendered by DirectX wasn’t ClearType aware and so in particular bolded text rendered garbled in IE6, leading to the devs to turn off ClearType entirely in filtered elements in IE7-8.)\n\n It sucks, but if you want native shadows in IE you’re going to need to do some hacking! Sorry guys!\n\nThanks to [Tanguy Krotoff](https://github.com/tkrotoff) for the motivation and bug reports behind this!","html":"<p>In the <a href=\"https://github.com/Craga89/qTip2/commit/563329f7198708c7c4d4ab28b41d4c6642275796\">recent commit today</a> a re-factoring of the CSS stylesheets took place in order to simply the styles qTip<sup>2</sup> uses, as well as changes  to the underlying tips code to cope with these changes. </p>\n\n<ol>\n<li><p>The biggest change is the movement of the <code>border</code> and <code>border-radius</code> declarations from the <em>titlebar and content elements</em> to the main <code>ui-tooltip</code> element. Thanks to this, many duplicate styles could be  <strong>removed from the stylesheet for a <em>10% size saving!</em></strong></p>\n\n<ul><li>This will likely effect the styling of your tooltips upon updating, and you may see black borders on your tooltip “tips” until you move the border colour declarations to the top ui-tooltip element.</li></ul></li>\n<li><p>The <code>ui-tooltip-shadow</code> class now <em>only works in IE9+ now</em> because of this modification and removal of the IE9> <code>filter</code> declarations. This was done because applying a filter to any element renders the overflow property useless, as reference from this <a href=\"http://labs.thesedays.com/blog/2011/06/02/ie-alpha-overflow-hidden-bug/#comment-291\">blog post comment</a>:</p>\n\n<blockquote>\n  <p>What I think happens in IE&lt;9 is it “designates” a square where DirectX can render on top of a hasLayout box based on <code>width</code>+<code>height</code> properties, and if content tries to expand outside that box then it’ll be cut off. I think that in block elements which have filters in them that everything in them is also rendered by DirectX. (As a side effect which you may already be aware of, text rendered by DirectX wasn’t ClearType aware and so in particular bolded text rendered garbled in IE6, leading to the devs to turn off ClearType entirely in filtered elements in IE7-8.)</p>\n</blockquote>\n\n<p>It sucks, but if you want native shadows in IE you’re going to need to do some hacking! Sorry guys!</p></li>\n</ol>\n\n<p>Thanks to <a href=\"https://github.com/tkrotoff\">Tanguy Krotoff</a> for the motivation and bug reports behind this!</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-11-20T23:55:29.000Z","created_by":1,"updated_at":"2013-11-21T21:44:52.000Z","updated_by":1,"published_at":"2012-05-13T11:00:00.000Z","published_by":1},{"id":6,"uuid":"60e226eb-c6ae-4881-823d-d688609f2558","title":"var, commas and equals","slug":"var-commas-and-equals","markdown":"Working with JavaScript for a while (or any other language for that matter) you tend to pick up on a lot of nuances particular to the language, but even long time users get tripped up every now and again, as did I with a recent namespace issue involving… you guessed it: var, *commas* and **equals**!\n\nTake for example this: \n\n<script src=\"https://gist.github.com/Craga89/3360237.js\"></script>\n\nAt first glance, it might seem as if *both* `foo` and `bar` variables should be declared within the local invoke methods scope, but this alas is not the case, and for good reason!\n\nSince **statements are evaluated right to left**, it first attempts to set the bar variable to “uhoh”, and since no bar variable is defined in our local scope (yet), it travels up the scope chain checking for a defined foo variable, until it gets to the window object, (or possibly some other scope if this is embedded within other methods&hrllip;), and sets foo as a property of that scope&hellip; *we’ve just polluted the global namespace!*\n\nPerhaps not what you’d expect upon first glance, and an easy thing to get tripped up on. The solution is simple,and actually a little syntactically nicer (i.e. more explicit) in my opinion:\n\n<script src=\"https://gist.github.com/Craga89/3360337.js\"></script>","html":"<p>Working with JavaScript for a while (or any other language for that matter) you tend to pick up on a lot of nuances particular to the language, but even long time users get tripped up every now and again, as did I with a recent namespace issue involving… you guessed it: var, <em>commas</em> and <strong>equals</strong>!</p>\n\n<p>Take for example this: </p>\n\n<script src=\"https://gist.github.com/Craga89/3360237.js\"></script>\n\n<p>At first glance, it might seem as if <em>both</em> <code>foo</code> and <code>bar</code> variables should be declared within the local invoke methods scope, but this alas is not the case, and for good reason!</p>\n\n<p>Since <strong>statements are evaluated right to left</strong>, it first attempts to set the bar variable to “uhoh”, and since no bar variable is defined in our local scope (yet), it travels up the scope chain checking for a defined foo variable, until it gets to the window object, (or possibly some other scope if this is embedded within other methods&hrllip;), and sets foo as a property of that scope&hellip; <em>we’ve just polluted the global namespace!</em></p>\n\n<p>Perhaps not what you’d expect upon first glance, and an easy thing to get tripped up on. The solution is simple,and actually a little syntactically nicer (i.e. more explicit) in my opinion:</p>\n\n<script src=\"https://gist.github.com/Craga89/3360337.js\"></script>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-11-20T23:57:02.000Z","created_by":1,"updated_at":"2013-11-21T21:46:46.000Z","updated_by":1,"published_at":"2012-08-12T11:00:00.000Z","published_by":1},{"id":7,"uuid":"4e7a0636-261c-4945-ac9d-6eaab02b5bf4","title":"JavaScript iOS version detection","slug":"javascript-ios-version-detection","markdown":"Small JavaScript snippet to detect the iOS version in use by the user.  **Note that this relys on the user agent always being correctly set, which it isn’t in some cases!**\n\n<script src=\"https://gist.github.com/Craga89/2829457.js\"></script>","html":"<p>Small JavaScript snippet to detect the iOS version in use by the user.  <strong>Note that this relys on the user agent always being correctly set, which it isn’t in some cases!</strong></p>\n\n<script src=\"https://gist.github.com/Craga89/2829457.js\"></script>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-11-20T23:57:21.000Z","created_by":1,"updated_at":"2013-11-21T21:46:14.000Z","updated_by":1,"published_at":"2012-05-29T11:00:00.000Z","published_by":1},{"id":8,"uuid":"6d637d62-dba1-448d-977f-61f59ab0faa3","title":"notyfy = noty + CSS themes","slug":"notyfy-noty-css-themes","markdown":"After finding the beautiful [noty](http://needim.github.com/noty) plugin by [Nedim Arabacı](http://github.com/needim) and forking it, I was surprised to see the lack of *pure CSS styling* available (without needing any JS, that is.). \n\nFortunately it didn’t take too much work to remove the regular JS themes in favour of regular old CSS files. It’s pretty much pure CSS at this point for all stylings :)\n\nTake a peek and fork away! http://craga89.github.com/notyfy","html":"<p>After finding the beautiful <a href=\"http://needim.github.com/noty\">noty</a> plugin by <a href=\"http://github.com/needim\">Nedim Arabacı</a> and forking it, I was surprised to see the lack of <em>pure CSS styling</em> available (without needing any JS, that is.). </p>\n\n<p>Fortunately it didn’t take too much work to remove the regular JS themes in favour of regular old CSS files. It’s pretty much pure CSS at this point for all stylings :)</p>\n\n<p>Take a peek and fork away! <a href='http://craga89.github.com/notyfy'>http://craga89.github.com/notyfy</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-11-20T23:57:42.000Z","created_by":1,"updated_at":"2013-11-21T21:45:12.000Z","updated_by":1,"published_at":"2012-11-01T12:00:00.000Z","published_by":1},{"id":9,"uuid":"72e627d1-fb50-45ed-987a-77e110ff754a","title":"qTip<sup>2</sup> - v2.2.0 released!","slug":"qtip2-v2-2-0-released","markdown":"### Where to Download\nHead over to the [Download page](http://qtip2.com/download) to customise your qTip2 download and grab the latest version!\n\n### Changelog\nYou can see the various changes in the `v2.2.0` release on the [Changelog](http://qtip2.com/changelog)\n\n","html":"<h3 id=\"wheretodownload\">Where to Download</h3>\n\n<p>Head over to the <a href=\"http://qtip2.com/download\">Download page</a> to customise your qTip2 download and grab the latest version!</p>\n\n<h3 id=\"changelog\">Changelog</h3>\n\n<p>You can see the various changes in the <code>v2.2.0</code> release on the <a href=\"http://qtip2.com/changelog\">Changelog</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-11-21T21:29:49.000Z","created_by":1,"updated_at":"2013-11-21T21:52:03.000Z","updated_by":1,"published_at":"2013-11-21T21:29:49.000Z","published_by":1},{"id":10,"uuid":"7d0f7f6c-1194-4d4b-bb1e-de8ee27a7c2e","title":"60fps scrolling using `pointer-events: none`","slug":"60fps-scrolling-using-pointer-events-none","markdown":"[Ryan Seddon](https://twitter.com/ryanseddon) just posted a very useful CSS tip to increase your scrolling speeds via use of `pointer-events: none`, based on [Christian Schaefer's tweet](https://twitter.com/derSchepp/statuses/400394164350644224):\n\n<!-- Embedded tweet -->\n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"><p><a href=\"https://twitter.com/paul_irish\">@paul_irish</a> Easy. Apply &quot;pointer-events: none&quot; to the &lt;body&gt; on scrollstart and remove it on scrollend. <a href=\"https://twitter.com/tabatkins\">@tabatkins</a></p>&mdash; Christian Schaefer (@derSchepp) <a href=\"https://twitter.com/derSchepp/statuses/400394164350644224\">November 12, 2013</a></blockquote>\n<script src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<!-- / Embedded tweet -->\n\nRead more about it here: http://www.thecssninja.com/javascript/pointer-events-60fps","html":"<p><a href=\"https://twitter.com/ryanseddon\">Ryan Seddon</a> just posted a very useful CSS tip to increase your scrolling speeds via use of <code>pointer-events: none</code>, based on <a href=\"https://twitter.com/derSchepp/statuses/400394164350644224\">Christian Schaefer's tweet</a>:</p>\n\n<!-- Embedded tweet -->  \n\n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"><p><a href=\"https://twitter.com/paul_irish\">@paul_irish</a> Easy. Apply &quot;pointer-events: none&quot; to the &lt;body&gt; on scrollstart and remove it on scrollend. <a href=\"https://twitter.com/tabatkins\">@tabatkins</a></p>&mdash; Christian Schaefer (@derSchepp) <a href=\"https://twitter.com/derSchepp/statuses/400394164350644224\">November 12, 2013</a></blockquote>  \n\n<script src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>  \n\n<!-- / Embedded tweet -->\n\n<p>Read more about it here: <a href='http://www.thecssninja.com/javascript/pointer-events-60fps'>http://www.thecssninja.com/javascript/pointer-events-60fps</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-11-25T12:11:13.000Z","created_by":1,"updated_at":"2013-11-25T12:21:15.000Z","updated_by":1,"published_at":"2013-11-25T12:11:14.000Z","published_by":1}],"posts_tags":[{"id":4,"post_id":5,"tag_id":4},{"id":5,"post_id":5,"tag_id":5},{"id":6,"post_id":8,"tag_id":4},{"id":7,"post_id":8,"tag_id":5},{"id":8,"post_id":8,"tag_id":6},{"id":9,"post_id":8,"tag_id":8},{"id":10,"post_id":8,"tag_id":7},{"id":11,"post_id":9,"tag_id":5},{"id":12,"post_id":9,"tag_id":9},{"id":13,"post_id":2,"tag_id":4},{"id":14,"post_id":2,"tag_id":5},{"id":15,"post_id":7,"tag_id":5},{"id":16,"post_id":7,"tag_id":10},{"id":17,"post_id":7,"tag_id":11},{"id":18,"post_id":6,"tag_id":5},{"id":19,"post_id":3,"tag_id":5},{"id":20,"post_id":3,"tag_id":12},{"id":21,"post_id":3,"tag_id":13},{"id":22,"post_id":4,"tag_id":4},{"id":23,"post_id":4,"tag_id":5},{"id":24,"post_id":9,"tag_id":4},{"id":25,"post_id":9,"tag_id":14}],"roles":[{"id":1,"uuid":"06ca0895-22e6-46cf-b18f-b0190f650e28","name":"Administrator","description":"Administrators","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-20T23:42:23.000Z","updated_by":1},{"id":2,"uuid":"03727121-7433-46a0-8713-3f62192fdb8e","name":"Editor","description":"Editors","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-20T23:42:23.000Z","updated_by":1},{"id":3,"uuid":"34b27b4b-17ff-4d81-a460-2c600a097de2","name":"Author","description":"Authors","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-20T23:42:23.000Z","updated_by":1}],"roles_users":[{"id":1,"role_id":1,"user_id":1}],"settings":[{"id":1,"uuid":"8bf8d1a9-b499-4f02-934e-43db6f38f5a3","key":"databaseVersion","value":"000","type":"core","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-20T23:42:23.000Z","updated_by":1},{"id":2,"uuid":"33096242-4957-41dd-948e-4ca7a16da198","key":"title","value":"craigsworks :: blog","type":"blog","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-22T13:23:08.000Z","updated_by":1},{"id":3,"uuid":"00e433af-879d-498f-8497-fa915ccd1bf4","key":"email","value":"craig@craigsworks.com","type":"blog","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-22T13:23:08.000Z","updated_by":1},{"id":4,"uuid":"4b02313c-1bb2-43b5-93e5-cb9c0eb2621b","key":"logo","value":"/content/images/2013/Nov/logo_name_white.png","type":"blog","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-22T13:23:08.000Z","updated_by":1},{"id":5,"uuid":"b18ee08f-2fe1-4f5e-b2a7-10d6bf7e1b55","key":"description","value":"Ramble ramble... something Front-end related...","type":"blog","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-22T13:23:08.000Z","updated_by":1},{"id":6,"uuid":"caa7517e-feb0-46c3-aa60-a9e8f361d7c5","key":"cover","value":"/content/images/2013/Nov/header_gplus.png","type":"blog","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-22T13:23:08.000Z","updated_by":1},{"id":7,"uuid":"b9bd34d5-3aba-41e3-95dd-2735ed734f4f","key":"defaultLang","value":"en_US","type":"blog","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-22T13:23:08.000Z","updated_by":1},{"id":8,"uuid":"b58f2a7a-fdd6-4a20-87c8-799204e1923a","key":"postsPerPage","value":"7","type":"blog","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-22T13:23:09.000Z","updated_by":1},{"id":9,"uuid":"69e711d1-23b5-4f50-a80f-25ea172af4c7","key":"forceI18n","value":"true","type":"blog","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-22T13:23:09.000Z","updated_by":1},{"id":10,"uuid":"41facb5b-5136-4ae7-954c-67352d2d542d","key":"activeTheme","value":"craigsworks","type":"theme","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-22T13:23:09.000Z","updated_by":1},{"id":11,"uuid":"f84478af-20af-4de7-82af-751f65b75f8c","key":"activePlugins","value":"[]","type":"plugin","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-20T23:42:23.000Z","updated_by":1},{"id":12,"uuid":"0a6bfc5f-8d35-4140-8d52-a46d521bf967","key":"installedPlugins","value":"[]","type":"plugin","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-29T16:31:24.000Z","updated_by":1},{"id":13,"uuid":"49c7bd62-8cc7-4803-9fb4-dff3c6cc7ff5","key":"dbHash","value":"a41e04d8-0a99-4396-9ca8-61c05db35b59","type":"core","created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-20T23:42:23.000Z","updated_by":1}],"tags":[{"id":1,"uuid":"15d3ad34-08da-48fc-a4a6-0b008c8c3bac","name":"Getting Started","slug":"getting-started","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-20T23:42:23.000Z","created_by":1,"updated_at":"2013-11-20T23:42:23.000Z","updated_by":1},{"id":2,"uuid":"46ebe6b1-9be2-4ce8-be6d-e8203e09ba0f","name":"qtip2 plugins","slug":"qtip2-plugins","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-21T21:43:49.000Z","created_by":1,"updated_at":"2013-11-21T21:43:49.000Z","updated_by":1},{"id":3,"uuid":"7ffbc93c-7945-49a3-8af5-8895fcac2162","name":"noty notyfy plugins","slug":"noty-notyfy-plugins","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-21T21:44:03.000Z","created_by":1,"updated_at":"2013-11-21T21:44:03.000Z","updated_by":1},{"id":4,"uuid":"b82a8472-3d61-499c-a3bc-72ad6fa9f7bd","name":"Plugins","slug":"plugins","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-21T21:44:52.000Z","created_by":1,"updated_at":"2013-11-21T21:44:52.000Z","updated_by":1},{"id":5,"uuid":"db4a61fa-e5a4-44ee-b29f-d0a8f0301fd4","name":"JavaScript","slug":"javascript","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-21T21:44:52.000Z","created_by":1,"updated_at":"2013-11-21T21:44:52.000Z","updated_by":1},{"id":6,"uuid":"492cd97d-09ef-44fd-b490-b137985899d2","name":"notyfy","slug":"notyfy","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-21T21:45:12.000Z","created_by":1,"updated_at":"2013-11-21T21:45:12.000Z","updated_by":1},{"id":7,"uuid":"61b4af92-88e5-4f43-ac3c-c93a94a83e15","name":"noty","slug":"noty","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-21T21:45:12.000Z","created_by":1,"updated_at":"2013-11-21T21:45:12.000Z","updated_by":1},{"id":8,"uuid":"e1430d49-f047-4d70-9ff8-30ef7bc60a5e","name":"CSS","slug":"css","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-21T21:45:12.000Z","created_by":1,"updated_at":"2013-11-21T21:45:12.000Z","updated_by":1},{"id":9,"uuid":"37273827-a1d3-4f5f-875a-d4bf8a8f20df","name":"Release","slug":"release","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-21T21:45:37.000Z","created_by":1,"updated_at":"2013-11-21T21:45:37.000Z","updated_by":1},{"id":10,"uuid":"2cbf6613-b88a-4b25-b590-33b520abcd3c","name":"iOS","slug":"ios","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-21T21:46:14.000Z","created_by":1,"updated_at":"2013-11-21T21:46:14.000Z","updated_by":1},{"id":11,"uuid":"1795fb39-4637-4abf-80d6-d8acde83f308","name":"Snippet","slug":"snippet","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-21T21:46:14.000Z","created_by":1,"updated_at":"2013-11-21T21:46:14.000Z","updated_by":1},{"id":12,"uuid":"72f9a048-c0cd-4f81-9d40-b5468a5a76cf","name":"Old","slug":"old","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-21T21:47:05.000Z","created_by":1,"updated_at":"2013-11-21T21:47:05.000Z","updated_by":1},{"id":13,"uuid":"8546274a-e375-4250-b2ae-f4a2e6a0dd4f","name":"Delta Encoding","slug":"delta-encoding","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-21T21:47:12.000Z","created_by":1,"updated_at":"2013-11-21T21:47:12.000Z","updated_by":1},{"id":14,"uuid":"120c06f2-7de8-4ba7-bd3c-fbc56bb8c888","name":"qTip2","slug":"qtip2","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2013-11-21T21:52:03.000Z","created_by":1,"updated_at":"2013-11-21T21:52:03.000Z","updated_by":1}],"users":[{"id":1,"uuid":"6fa0120e-7f03-4cff-bff3-961dc4f5de58","name":"Craig Michael Thompson","slug":"craig-michael-thompson","password":"$2a$10$RqDxAdJvltm7dgoMCFYGe.F7pP7ybqcYgujV2smNX3/xg88kE3qmW","email":"craig@craigsworks.com","image":null,"cover":"/content/images/2013/Nov/header_gplus-1.png","bio":"Hi. My names Craig and I'm a Front-end Web Developer / Consultant primarily interested in jQuery/JavaScript development with HTML5/CSS3 and emerging W3C standards.","website":"http://craigsworks.com","location":"Newcastle Upon Tyne, United Kingdom","accessibility":null,"status":"active","language":"en_US","meta_title":null,"meta_description":null,"last_login":null,"created_at":"2013-11-20T23:51:04.000Z","created_by":1,"updated_at":"2013-11-20T23:52:17.000Z","updated_by":1}]}}